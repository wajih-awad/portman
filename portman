#!/bin/bash

# portman - Simple CLI tool to manage TCP ports

PORT=$1

if [ -z "$PORT" ]; then
  echo "❌ Usage: portman <port-number>"
  exit 1
fi

echo "🔍 Checking port $PORT..."

# Try lsof first
PID=$(sudo lsof -ti tcp:$PORT 2>/dev/null)

# If lsof fails, try ss
if [ -z "$PID" ]; then
  echo "⚠️  lsof didn't detect any process. Trying ss..."

  SS_LINE=$(sudo ss -lptn "sport = :$PORT" 2>/dev/null | grep -v State | head -n 1)

  if [ -z "$SS_LINE" ]; then
    echo "✅ Port $PORT is completely free."
    exit 0
  fi

  PID=$(echo "$SS_LINE" | grep -oP 'pid=\K[0-9]+')

  if [ -z "$PID" ]; then
    echo "🟠 Port $PORT is in use (possibly in TIME_WAIT/CLOSE_WAIT), but no active PID found."
    echo "⏳ Wait a few seconds and try again."
    exit 0
  fi
fi

echo "⚠️ Port $PORT is in use by PID: $PID"
echo "ℹ️ Process details:"
sudo lsof -i tcp:$PORT 2>/dev/null

read -p "❓ Do you want to kill this process? (y/yes to confirm): " confirm
case "$confirm" in
  y|Y|yes|YES)
    kill -9 $PID && echo "✅ Process $PID has been killed." || echo "❌ Failed to kill process $PID."
    ;;
  *)
    echo "🚫 Aborted. Port $PORT is still in use."
    ;;
esac
